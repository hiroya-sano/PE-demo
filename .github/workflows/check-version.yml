name: "Check version"

on:
  push:
    branches:
      - 'feature/*'
      - 'hotfix/*'
    paths-ignore:
      - 'README.md'

jobs:
  terraform:
    name: "Check version"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get current version
        id: check-current-version
        uses: actions-ecosystem/action-get-latest-tag@v1

      - name: Get new version
        run: |
          NEW_VERSOIN=$(cat version.json | jq -r '.version')
          echo "new_version=${NEW_VERSOIN}" >> $GITHUB_ENV

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install semver
        run: npm install semver

      - name: Debug
        env:
          CURRENT_VERSION: ${{ steps.check-current-version.outputs.tag }}
          NEW_VERSOIN: ${{ env.new_version }}
        run: |
          echo "current: ${CURRENT_VERSION}"
          echo "new: ${NEW_VERSOIN}"

      - name: Compare versions
        env:
          CURRENT_VERSION: ${{ steps.check-current-version.outputs.tag }}
          NEW_VERSOIN: ${{ env.new_version }}
        run: |
          node -e "
          const semver = require('semver');
          const currentVer = process.env.CURRENT_VERSION;
          const newVer = process.env.NEW_VERSOIN;
          
          if (semver.gt(newVer, currentVer)) {
            process.exit(0);
          } else {
            console.log(`\${newVer} is older or  same as \${currentVer}`);
          }"
